name: CD - Production

on:
  push:
    branches:
      - 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant Execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_ID }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_ID }}/cleopatra-server:latest .
          docker push ${{ secrets.DOCKERHUB_ID }}/cleopatra-server:latest

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo ${{ secrets.DOCKERHUB_TOKEN }} | sudo docker login -u ${{ secrets.DOCKERHUB_ID }} --password-stdin
            cd /home/ubuntu/cleopatra
          
            # 권한 표준화 (mongo: .sh=755, .js=644 / mysql: .sql=644)
            sudo find mongo-init -type d -exec chmod 755 {} \; || true
            sudo find mongo-init -type f -name "*.sh" -exec chmod 755 {} \; || true
            sudo find mongo-init -type f -name "*.js" -exec chmod 644 {} \; || true
            sudo find mysql-init -type d -exec chmod 755 {} \; || true
            sudo find mysql-init -type f -name "*.sql" -exec chmod 644 {} \; || true
      
            # CRLF 정리(윈도우 개행 제거) — 없으면 무시
            sudo sed -i 's/\r$//' mongo-init/*.sh 2>/dev/null || true
            sudo sed -i 's/\r$//' mongo-init/*.js 2>/dev/null || true
            sudo sed -i 's/\r$//' mysql-init/*.sql 2>/dev/null || true
          
          
            sudo docker compose pull application
            sudo docker compose down
            sudo docker compose up -d
            sudo docker image prune -f
          EOF